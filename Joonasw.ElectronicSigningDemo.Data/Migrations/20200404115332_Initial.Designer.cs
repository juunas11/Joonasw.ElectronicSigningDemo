// <auto-generated />
using System;
using Joonasw.ElectronicSigningDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Joonasw.ElectronicSigningDemo.Data.Migrations
{
    [DbContext(typeof(SigningDbContext))]
    [Migration("20200404115332_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Joonasw.ElectronicSigningDemo.Data.Signer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("DecidedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Signed")
                        .HasColumnType("bit");

                    b.Property<string>("WaitForSignatureInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("Email", "RequestId")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Signers");
                });

            modelBuilder.Entity("Joonasw.ElectronicSigningDemo.Data.SigningRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("WorkflowCompletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("WorkflowStartedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Joonasw.ElectronicSigningDemo.Data.Signer", b =>
                {
                    b.HasOne("Joonasw.ElectronicSigningDemo.Data.SigningRequest", "Request")
                        .WithMany("Signers")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Joonasw.ElectronicSigningDemo.Data.SigningRequest", b =>
                {
                    b.OwnsOne("Joonasw.ElectronicSigningDemo.Data.WorkflowInstance", "Workflow", b1 =>
                        {
                            b1.Property<Guid>("SigningRequestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(64)")
                                .HasMaxLength(64);

                            b1.Property<string>("PurgeHistoryUrl")
                                .HasColumnType("nvarchar(512)")
                                .HasMaxLength(512);

                            b1.Property<string>("SendEventUrl")
                                .HasColumnType("nvarchar(512)")
                                .HasMaxLength(512);

                            b1.Property<string>("StatusQueryUrl")
                                .HasColumnType("nvarchar(512)")
                                .HasMaxLength(512);

                            b1.Property<string>("TerminateUrl")
                                .HasColumnType("nvarchar(512)")
                                .HasMaxLength(512);

                            b1.HasKey("SigningRequestId");

                            b1.ToTable("Requests");

                            b1.WithOwner()
                                .HasForeignKey("SigningRequestId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
